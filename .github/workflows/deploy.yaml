name: Docker build and push to Artifact Registry

on:
  push:
    branches:
      - api-tracking

env:
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REPOSITORY: ${{ secrets.REPOSITORY }}

jobs:
  login-build-push-ml-service:
    name: Docker login, build, and push - ml-service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Authenticate to Google Cloud'
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
          token_format: 'access_token'

      - uses: 'docker/login-action@v1'
        name: 'Docker login'
        with:
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: 'Docker build - ml-service'
        env:
          IMAGE: ml-service
          DOCKERFILE_PATH: webservice/
        run: |
          docker build \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest" \
            $DOCKERFILE_PATH

      - name: 'Docker push - ml-service'
        run: |
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/ml-service:latest"

  login-build-push-grafana:
    name: Docker login, build, and push - grafana
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Authenticate to Google Cloud'
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
          token_format: 'access_token'

      - uses: 'docker/login-action@v1'
        name: 'Docker login'
        with:
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: 'Docker build - grafana'
        env:
          IMAGE: grafana
          DOCKERFILE_PATH: deployment/grafana_deployment/
        run: |
          docker build \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest" \
            $DOCKERFILE_PATH

      - name: 'Docker push - grafana'
        run: |
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/grafana:latest"

  login-build-push-prometheus:
    name: Docker login, build, and push - prometheus
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Authenticate to Google Cloud'
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
          token_format: 'access_token'

      - uses: 'docker/login-action@v1'
        name: 'Docker login'
        with:
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: 'Docker build - prometheus'
        env:
          IMAGE: prometheus
          DOCKERFILE_PATH: deployment/prometheus_deployment/
        run: |
          docker build \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest" \
            $DOCKERFILE_PATH

      - name: 'Docker push - prometheus'
        run: |
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/prometheus:latest"
